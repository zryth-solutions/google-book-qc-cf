name: Deploy Question Analysis Service

on:
  push:
    branches: [main]
    paths:
      - 'question_analysis_service/**'
      - '.github/workflows/deploy-question-analysis.yml'
  workflow_dispatch:

env:
  PROJECT_ID: book-qc-cf
  REGION: us-central1
  SERVICE_NAME: question-analysis-service
  IMAGE_NAME: question-analysis
  REPOSITORY: us-central1-docker.pkg.dev/book-qc-cf/question-analysis

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker $REGION-docker.pkg.dev
    
    - name: Build Docker image
      run: |
        cd question_analysis_service
        docker build -t $REPOSITORY/$IMAGE_NAME:$GITHUB_SHA .
        docker tag $REPOSITORY/$IMAGE_NAME:$GITHUB_SHA $REPOSITORY/$IMAGE_NAME:latest
    
    - name: Push Docker image
      run: |
        docker push $REPOSITORY/$IMAGE_NAME:$GITHUB_SHA
        docker push $REPOSITORY/$IMAGE_NAME:latest
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REPOSITORY/$IMAGE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --memory 4Gi \
          --cpu 2 \
          --timeout 600 \
          --max-instances 10 \
          --min-instances 0 \
          --port 8080 \
          --set-env-vars PROJECT_ID=$PROJECT_ID,BUCKET_NAME=book-qc-cf-pdf-storage \
          --set-secrets GEMINI_API_KEY=question-analysis-secrets:gemini-api-key,QDRANT_API_KEY=question-analysis-secrets:qdrant-api-key,QDRANT_URL=question-analysis-secrets:qdrant-url
    
    - name: Update Cloud Run service with latest image
      run: |
        gcloud run services update $SERVICE_NAME \
          --region $REGION \
          --image $REPOSITORY/$IMAGE_NAME:latest
    
    - name: Verify deployment
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "Service URL: $SERVICE_URL"
        
        # Wait for service to be ready
        sleep 30
        
        # Test health endpoint
        curl -f "$SERVICE_URL/health" || exit 1
        echo "‚úÖ Service is healthy and responding"
    
    - name: Output service information
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "üöÄ Question Analysis Service deployed successfully!"
        echo "üìç Service URL: $SERVICE_URL"
        echo "üîç Health Check: $SERVICE_URL/health"
        echo "üìö API Documentation:"
        echo "  - POST $SERVICE_URL/analyze/file - Analyze single JSON file"
        echo "  - POST $SERVICE_URL/analyze/folder - Analyze local folder"
        echo "  - POST $SERVICE_URL/analyze/gcs-folder - Analyze GCS folder"
        echo "  - POST $SERVICE_URL/search/analysis - Search analysis results"
        echo "  - GET $SERVICE_URL/collections - List Qdrant collections"
