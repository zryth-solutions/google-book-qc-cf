name: Deploy All Services

on:
  push:
    branches: [ main ]
    paths:
      - 'split_pdf_service/**'
      - 'book_extractor_service/**'
      - 'utils/**'
      - 'requirements.txt'
      - 'config.yaml'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  PROJECT_ID: book-qc-cf
  REGION: us-central1
  ARTIFACT_REGISTRY: pdf-processor

jobs:
  deploy-split-pdf:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/282136454082/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
        service_account: 'pdf-processor-sa@book-qc-cf.iam.gserviceaccount.com'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build and Deploy Split PDF Service
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_wait_seconds: 60
        command: |
          docker build \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            -t $REGION-docker.pkg.dev/$PROJECT_ID/pdf-processor/pdf-processor:$GITHUB_SHA \
            -f split_pdf_service/Dockerfile .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/pdf-processor/pdf-processor:$GITHUB_SHA
        
    - name: Create/Update Split PDF Cloud Run Job
      run: |
        # Create or update Cloud Run Job
        gcloud run jobs replace --image=$REGION-docker.pkg.dev/$PROJECT_ID/pdf-processor/pdf-processor:$GITHUB_SHA \
          --region=$REGION \
          --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com \
          --set-env-vars=PROJECT_ID=$PROJECT_ID,BUCKET_NAME=book-qc-cf-pdf-storage,REGION=$REGION \
          --max-retries=3 \
          --parallelism=5 \
          --task-count=1 \
          pdf-processor-job || \
        gcloud run jobs create pdf-processor-job \
          --image=$REGION-docker.pkg.dev/$PROJECT_ID/pdf-processor/pdf-processor:$GITHUB_SHA \
          --region=$REGION \
          --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com \
          --set-env-vars=PROJECT_ID=$PROJECT_ID,BUCKET_NAME=book-qc-cf-pdf-storage,REGION=$REGION \
          --max-retries=3 \
          --parallelism=5 \
          --task-count=1
        
        # Deploy workflow
        gcloud workflows deploy pdf-processing-workflow \
          --source split_pdf_service/pdf_processing_workflow.yaml \
          --location $REGION \
          --service-account pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com

  deploy-book-extractor:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/282136454082/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
        service_account: 'pdf-processor-sa@book-qc-cf.iam.gserviceaccount.com'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build and Deploy Book Extractor Service
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_wait_seconds: 60
        command: |
          docker build \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            -t $REGION-docker.pkg.dev/$PROJECT_ID/book-extractor/book-extractor:$GITHUB_SHA \
            -f book_extractor_service/Dockerfile .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/book-extractor/book-extractor:$GITHUB_SHA
        
    - name: Create/Update Book Extractor Cloud Run Job
      run: |
        # Create or update Cloud Run Job
        gcloud run jobs replace --image=$REGION-docker.pkg.dev/$PROJECT_ID/book-extractor/book-extractor:$GITHUB_SHA \
          --region=$REGION \
          --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com \
          --set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,BUCKET_NAME=book-qc-cf-pdf-storage,VERTEX_AI_LOCATION=$REGION \
          --max-retries=3 \
          --parallelism=5 \
          --task-count=1 \
          book-extractor-job || \
        gcloud run jobs create book-extractor-job \
          --image=$REGION-docker.pkg.dev/$PROJECT_ID/book-extractor/book-extractor:$GITHUB_SHA \
          --region=$REGION \
          --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com \
          --set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,BUCKET_NAME=book-qc-cf-pdf-storage,VERTEX_AI_LOCATION=$REGION \
          --max-retries=3 \
          --parallelism=5 \
          --task-count=1
        
        # Deploy workflow
        gcloud workflows deploy book-extraction-workflow \
          --source book_extractor_service/book_extraction_workflow.yaml \
          --location $REGION \
          --service-account pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com

  summary:
    runs-on: ubuntu-latest
    needs: [deploy-split-pdf, deploy-book-extractor]
    if: always()
    
    steps:
    - name: Show Deployment Summary
      run: |
        echo "üéâ Deployment Summary:"
        echo "‚úÖ PDF Processor Job: pdf-processor-job"
        echo "‚úÖ Book Extractor Job: book-extractor-job"
        echo "‚úÖ Workflows: pdf-processing-workflow, book-extraction-workflow"
        echo "üìç Region: $REGION"
        echo "üìç Project: $PROJECT_ID"
