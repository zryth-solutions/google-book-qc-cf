name: Build and Deploy Book Extractor

on:
  push:
    branches: [ main ]
    paths:
      - 'book_extractor_service/**'
      - 'requirements.txt'
      - 'utils/**'
  workflow_dispatch:

env:
  PROJECT_ID: book-qc-cf
  REGION: us-central1
  SERVICE_NAME: book-extractor
  BUCKET_NAME: book-qc-cf-pdf-storage
  ARTIFACT_REGISTRY: book-extractor

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/282136454082/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
        service_account: 'pdf-processor-sa@book-qc-cf.iam.gserviceaccount.com'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build Docker image with retry
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_wait_seconds: 60
        command: |
          docker build \
            -t $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY/$SERVICE_NAME:$GITHUB_SHA \
            -f book_extractor_service/Dockerfile .

    - name: Push Docker image
      run: |
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY/$SERVICE_NAME:$GITHUB_SHA

    - name: Create/Update Cloud Run Job
      run: |
        # Try to update existing job first, if it fails, create a new one
        if gcloud run jobs describe $SERVICE_NAME-job --region=$REGION >/dev/null 2>&1; then
          echo "Job exists, updating..."
          gcloud run jobs update $SERVICE_NAME-job \
            --image=$REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY/$SERVICE_NAME:$GITHUB_SHA \
            --region=$REGION \
            --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com \
            --set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,BUCKET_NAME=$BUCKET_NAME,VERTEX_AI_LOCATION=$REGION \
            --max-retries=3 \
            --parallelism=5 \
            --tasks=1 \
            --task-timeout=604800s \
            --launch-stage=BETA
        else
          echo "Job doesn't exist, creating..."
          gcloud run jobs create $SERVICE_NAME-job \
            --image=$REGION-docker.pkg.dev/$PROJECT_ID/$ARTIFACT_REGISTRY/$SERVICE_NAME:$GITHUB_SHA \
            --region=$REGION \
            --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com \
            --set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,BUCKET_NAME=$BUCKET_NAME,VERTEX_AI_LOCATION=$REGION \
            --max-retries=3 \
            --parallelism=5 \
            --tasks=1 \
            --task-timeout=604800s \
            --launch-stage=BETA
        fi

    - name: Wait for Cloud Run Job to stabilize
      run: |
        echo "Waiting for Cloud Run Job to stabilize..."
        sleep 10

    - name: Deploy GCP Workflow
      run: |
        # Add retry logic for workflow deployment
        for i in {1..3}; do
          echo "Attempt $i: Deploying workflow..."
          if gcloud workflows deploy book-extraction-workflow \
            --source=book_extractor_service/book_extraction_workflow.yaml \
            --location=$REGION \
            --service-account=pdf-processor-sa@$PROJECT_ID.iam.gserviceaccount.com; then
            echo "Workflow deployed successfully"
            break
          else
            echo "Workflow deployment failed, attempt $i"
            if [ $i -eq 3 ]; then
              echo "All attempts failed"
              exit 1
            fi
            echo "Waiting 30 seconds before retry..."
            sleep 30
          fi
        done

