name: Build and Deploy to GCP Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'split_pdf_service/**'
      - 'requirements.txt'
      - 'utils/**'
  workflow_dispatch:

env:
  PROJECT_ID: book-qc-cf
  GAR_LOCATION: us-central1
  REGION: us-central1
  SERVICE: pdf-processor
  REPOSITORY: pdf-processor

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --no-cache-dir -r requirements.txt
    
    - name: Run tests
      run: |
        # Add your test commands here
        echo "Tests would run here"
        # python -m pytest tests/

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev
    
    - name: Build and push Docker image
      run: |
        # Build the Docker image from split_pdf_service directory
        docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:$GITHUB_SHA -f split_pdf_service/Dockerfile .
        
        # Push the Docker image
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:$GITHUB_SHA
        
        # Tag as latest
        docker tag $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:$GITHUB_SHA $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:latest
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:latest
    
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
        env_vars: |
          PROJECT_ID=${{ env.PROJECT_ID }}
          BUCKET_NAME=book-qc-cf-pdf-storage
          REGION=${{ env.REGION }}
        flags: --service-account=${{ secrets.SERVICE_ACCOUNT }}
    
    - name: Deploy GCP Workflow
      run: |
        echo "Deploying GCP Workflow..."
        gcloud workflows deploy pdf-processing-workflow \
          --source=split_pdf_service/pdf_processing_workflow.yaml \
          --location=${{ env.REGION }} \
          --project=${{ env.PROJECT_ID }}
        echo "âœ… Workflow deployed successfully!"
    
    - name: Update Workflow URLs
      run: |
        echo "Updating workflow URLs with actual service URL..."
        python3 split_pdf_service/update_workflow_urls.py ${{ steps.deploy.outputs.url }}
        echo "âœ… Workflow URLs updated!"
    
    - name: Show Output
      run: |
        echo "ðŸŽ‰ Deployment Complete!"
        echo "Cloud Run Service URL: ${{ steps.deploy.outputs.url }}"
        echo "Workflow: pdf-processing-workflow"
        echo "Project: ${{ env.PROJECT_ID }}"
        echo "Region: ${{ env.REGION }}"